local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
local Window = OrionLib:MakeWindow({
	Name = "Mobile Fly",
	HidePremium = false,
	SaveConfig = false,
	IntroText = "Premium Hub | V1.1 - by nytheron"
})

local VehicleTab = Window:MakeTab({
	Name = "Vehicle",
	Icon = "rbxassetid://13773422471",
	PremiumOnly = false
})

-- Variablen
local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")
local PlayerGui = player:WaitForChild("PlayerGui")

local flying = false
local flightConnection
local flightSpeed = 60
local flightAcceleration = 10
local currentVelocity = Vector3.zero

local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Compact, draggable Mobile Fly UI
local gui = Instance.new("ScreenGui")
gui.Name = "MobileFlyUI"
gui.Parent = PlayerGui
gui.ResetOnSpawn = false
gui.Enabled = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 160, 0, 130)
frame.Position = UDim2.new(0.7, 0, 0.6, 0)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BackgroundTransparency = 0.2
frame.Active = true

-- Drag functionality
local dragging, dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
game:GetService("UserInputService").InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

frame.Parent = gui

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, 0, 0, 30)
toggleButton.Position = UDim2.new(0, 0, 0, 0)
toggleButton.Text = "üöÄ Fly: OFF"
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Parent = frame

local directions = {
	{Symbol = "‚Üë", Vector = Vector3.new(0, 0, -1), Pos = UDim2.new(0.5, -20, 0, 35)},
	{Symbol = "‚Üì", Vector = Vector3.new(0, 0, 1), Pos = UDim2.new(0.5, -20, 0, 70)},
	{Symbol = "‚Üê", Vector = Vector3.new(-1, 0, 0), Pos = UDim2.new(0, 10, 0, 52)},
	{Symbol = "‚Üí", Vector = Vector3.new(1, 0, 0), Pos = UDim2.new(1, -50, 0, 52)},
	{Symbol = "‚éµ", Vector = Vector3.new(0, 1, 0), Pos = UDim2.new(0, 10, 0, 95)},
	{Symbol = "‚áß", Vector = Vector3.new(0, -1, 0), Pos = UDim2.new(1, -50, 0, 95)},
}

local moving = {}

for _, dir in ipairs(directions) do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 40, 0, 30)
	btn.Position = dir.Pos
	btn.Text = dir.Symbol
	btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Parent = frame

	btn.MouseButton1Down:Connect(function()
		moving[dir.Symbol] = true
	end)
	btn.MouseButton1Up:Connect(function()
		moving[dir.Symbol] = false
	end)
	btn.TouchTap:Connect(function()
		moving[dir.Symbol] = true
		wait(0.15)
		moving[dir.Symbol] = false
	end)
end

local function startFly()
	if flying then return end
	flying = true
	toggleButton.Text = "üöÄ Fly: ON"

	flightConnection = runService.RenderStepped:Connect(function(delta)
		local baseVelocity = Vector3.zero
		local camCF = camera.CFrame

		if moving["‚Üë"] then baseVelocity += camCF.LookVector * flightSpeed end
		if moving["‚Üì"] then baseVelocity -= camCF.LookVector * flightSpeed end
		if moving["‚Üê"] then baseVelocity -= camCF.RightVector * flightSpeed end
		if moving["‚Üí"] then baseVelocity += camCF.RightVector * flightSpeed end
		if moving["‚éµ"] then baseVelocity += Vector3.yAxis * flightSpeed end
		if moving["‚áß"] then baseVelocity -= Vector3.yAxis * flightSpeed end

		currentVelocity = currentVelocity:Lerp(baseVelocity, math.clamp(delta * flightAcceleration, 0, 1))
		hrp.Velocity = currentVelocity + Vector3.new(0, 2, 0)
	end)
end

local function stopFly()
	if not flying then return end
	flying = false
	toggleButton.Text = "üöÄ Fly: OFF"
	if flightConnection then
		flightConnection:Disconnect()
		flightConnection = nil
	end
end

toggleButton.MouseButton1Click:Connect(function()
	if flying then
		stopFly()
	else
		startFly()
	end
end)

-- Toggle UI via Orion
VehicleTab:AddToggle({
	Name = "Show Mobile Fly UI",
	Default = false,
	Callback = function(Value)
		gui.Enabled = Value
	end
})

VehicleTab:AddSlider({
	Name = "Fly Speed",
	Min = 20,
	Max = 200,
	Default = flightSpeed,
	Color = Color3.fromRGB(255, 255, 255),
	Increment = 5,
	ValueName = "Speed",
	Callback = function(Value)
		flightSpeed = Value
	end
})

OrionLib:Init()
